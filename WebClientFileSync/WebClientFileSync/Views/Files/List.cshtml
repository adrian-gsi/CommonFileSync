@model WebClientFileSync.Models.ListModel
@{
    ViewBag.Title = "List";
}
<h2>List</h2>
<p>
   @ViewBag.Message
</p>
<form action="~/Files/Upload" method="post" enctype="multipart/form-data">
    <input type="file" name="Upload" width="400" />
    <button type="submit">Upload</button>
</form>
<table id="filesTable" class="table">
    <tr>
        <th></th>
    </tr>
    @foreach (var item in Model.filenames)
    {
        <tr>
            <td>@item</td>
            @* <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>*@
        </tr>
    }
</table>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="http://localhost/ServerFileSync/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="http://localhost/ServerFileSync/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
       $(function () {
           // Reference the auto-generated proxy for the hub.
           $.connection.hub.url = 'http://localhost/ServerFileSync/signalr';
           var files = $.connection.fileSyncHub;
           // Create a function that the hub can call back to display messages.
           files.client.newFileNotification = function (filename,CRC) {
               // Add the message to the page.
               $('#filesTable').append('<tr><td>' + htmlEncode(filename) + '</td></tr>');
           };
           // Get the user name and store it to prepend to messages.
           //$('#displayname').val(prompt('Enter your name:', ''));
           // Set initial focus to message input box.
           //$('#message').focus();
           // Start the connection.
           $.connection.hub.start().done(function () {
               //alert('Hub started!');
               //$('#sendmessage').click(function () {
               //    // Call the Send method on the hub.
               //    files.server.send($('#displayname').val(), $('#message').val());
               //    // Clear text box and reset focus for next comment.
               //    $('#message').val('').focus();
               //});
           });
       });
       // This optional function html-encodes messages for display in the page.
       function htmlEncode(value) {
           var encodedValue = $('<div />').text(value).html();
           return encodedValue;
       }
    </script>
}